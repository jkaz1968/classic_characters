#!/usr/bin/python

# characters.py
# random character generator for Classic Traveller

# character UPP: 777777
# Str, Dex, End, Int, Edu, Soc

import random

# career modules
import career_data
import career_sequence


def intro():
    print("""
Classic Traveller Character Creator

Generates random characters for the original Traveller game developed by Mark Miller in 1977.
Character stats were defined by a six-digit Universal Personality Profile or UPP, as explained:
Strength, Dexterity, Endurance, Intelligence, Education, Social Standing
Each stat is rated from 0 to 15 (0 to F in the final form) and initial values are generated by
rolling 2x six-sided dice.

Characters are presumed to be adults, typically on their own following a military or other
professional career, with nothing better to do than explore the galaxy and look for fame and
fortune.

First you will name the character and generate the UPP. You will then choose a career
path to follow.

At the end of the process you will have the option of saving the character to a text file.
By default the file is in the same directory as the program files, under the Characters
directory.

    """)


def roll_two_dice():
    return random.randint(1, 6) + random.randint(1, 6)


def roll_two_dice_for_upp():
    rolls = []
    for i in range(0, 3):
        rolls.append(random.randint(1, 6))
    rolls.sort()
    return rolls[1] + rolls [2]


def gen_upp():
    upp = []
    for stat in range(0, 6):
        upp.append(roll_two_dice_for_upp())
    return upp


def get_input(string):
    return input(string)


def start(name, upp):
    a = 0
    att = -1
    age = 18
    keep_going = False
    jobs = career_data.career_list
    print("Hello, {}. Select a service to enlist in. "
          "\nStats in brackets give favorable bonuses to enlistment: ".format(name))
    for job in jobs:
        print("{}. {} (+1 for {}-{}, +2 for {}-{})".
              format(a, job[0], job[1][1][0][0], job[1][1][0][1], job[1][1][1][0], job[1][1][1][1]))
        a += 1
    while keep_going is False:
        try:
            while att < 0 or att >= len(jobs):
                att = int(get_input('Select by number: '))
        except ValueError:
            continue
        career = jobs[att]
        if career_sequence.enlist(upp, career[0], career[1]):
            print("Your request to join the {} was approved!".format(career[0]))

            print("\nYour career choice: {}\n{}"
                  "\n\tEnlistment: {}\n\tSurvival: {}\n\tPosition: {}"
                  "\n\tPromotion: {}\n\tReenlistment: {}+\n\tStarting Skills: {}".
                  format(career[0], career_data.career_info[career_data.careers.index(career[0])][3],
                         career_sequence.get_enlistment_info(career[1]),  # job, enlistment
                         career_sequence.get_position_info(career[2]),  # survival
                         career_sequence.get_position_info(career[3]),  # commission
                         career_sequence.get_position_info(career[4]), career[5],  # promotion, re-enlistment
                         career_sequence.get_starting_skills(career[6])))  # starting skills
            input("Hit 'Enter' to continue ---> ")
            career_sequence.career_steps(name, upp, age, 0, career, 0)
            break
        else:
            print("Your request to join the {} was denied.".format(career[0]))
            att = -1
            continue


def main():
    intro()
    name = "Traveller"
    upp = gen_upp()
    print("\nName: {}\nUPP: Str-{} Dex-{} End-{} Int-{} Edu-{} Soc-{}".
          format(name, upp[0], upp[1], upp[2], upp[3], upp[4], upp[5]))
    start(name, upp)


main()
